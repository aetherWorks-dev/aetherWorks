{
    "name": "infinite-mac",
    "version": "0.1.0",
    "homepage": ".",
    "private": true,
    "type": "module",
    "dependencies": {
        "classnames": "^2.3.2",
        "file-saver": "^2.0.5",
        "jszip": "^3.7.0",
        "linkify-react": "^4.1.1",
        "react": "^18.2.0",
        "react-dom": "^18.2.0",
        "ringbuf.js": "^0.3.3",
        "typescript": "^5.4.5"
    },
    "devDependencies": {
        "@types/audioworklet": "^0.0.46",
        "@types/dom-view-transitions": "^1.0.4",
        "@types/emscripten": "^1.39.7",
        "@types/file-saver": "^2.0.5",
        "@types/react": "^18.2.6",
        "@types/react-dom": "^18.2.4",
        "@typescript-eslint/eslint-plugin": "^7.9.0",
        "@typescript-eslint/parser": "^7.9.0",
        "@vitejs/plugin-basic-ssl": "1.1.0",
        "@vitejs/plugin-react-swc": "^3.6.0",
        "clang-format": "^1.8.0",
        "csstype": "^3.1.3",
        "eslint": "^8.48.0",
        "eslint-plugin-import": "^2.28.1",
        "eslint-plugin-react-hooks": "^4.6.0",
        "husky": "^6.0.0",
        "lint-staged": "^11.0.0",
        "prettier": "^2.8.8",
        "vite": "5.2.11",
        "vite-plugin-svgr": "4.2.0",
        "wrangler": "^3.56.0"
    },
    "scripts": {
        "import-emulator": "scripts/import-emulator.sh",
        "import-disks": "scripts/import-disks.py",
        "import-cd-roms": "scripts/import-cd-roms.py",
        "load-placeholder-stickies-file": "scripts/load-placeholder-stickies-file.py",
        "build-xadmaster": "scripts/build-xadmaster.sh",
        "start": "vite",
        "build": "vite build",
        "preview": "vite preview --host",
        "worker-dev": "wrangler dev --port=3128",
        "worker-deploy": "wrangler deploy --env production",
        "sync-disks": "scripts/sync-disks.sh",
        "prettier": "prettier --write src workers-site",
        "lint": "eslint --fix src workers-site",
        "check": "tsc --noEmit && tsc --noEmit --project workers-site/tsconfig.json",
        "format-macemu": "clang-format -i --glob=macemu/BasiliskII/src/Unix/JS/*"
    },
    "eslintConfig": {
        "extends": [
            "eslint:recommended",
            "plugin:@typescript-eslint/recommended",
            "plugin:react-hooks/recommended",
            "plugin:import/recommended"
        ],
        "parser": "@typescript-eslint/parser",
        "parserOptions": {
            "project": true,
            "tsconfigRootDir": "./"
        },
        "plugins": [
            "@typescript-eslint"
        ],
        "root": true,
        "ignorePatterns": [
            "src/emulator/dingusppc.js",
            "src/emulator/minivmac-*.js",
            "src/emulator/previous.js",
            "src/emulator/BasiliskII.js",
            "src/emulator/SheepShaver.js"
        ],
        "rules": {
            "array-callback-return": "error",
            "no-constant-binary-expression": "error",
            "no-constructor-return": "error",
            "no-promise-executor-return": "error",
            "no-self-compare": "error",
            "no-template-curly-in-string": "error",
            "no-unmodified-loop-condition": "error",
            "no-unreachable-loop": "error",
            "require-atomic-updates": [
                "error",
                {
                    "allowProperties": true
                }
            ],
            "no-eval": "error",
            "no-implied-eval": "error",
            "no-new-object": "error",
            "no-new-wrappers": "error",
            "no-script-url": "error",
            "no-useless-constructor": "error",
            "no-useless-rename": "error",
            "no-var": "error",
            "eqeqeq": "error",
            "object-shorthand": [
                "error",
                "always",
                {
                    "avoidQuotes": true
                }
            ],
            "prefer-const": "error",
            "import/consistent-type-specifier-style": [
                "error",
                "prefer-inline"
            ],
            "import/no-unresolved": "off",
            "import/no-empty-named-blocks": "error",
            "import/no-duplicates": [
                "error",
                {
                    "prefer-inline": true
                }
            ],
            "@typescript-eslint/consistent-type-imports": [
                "error",
                {
                    "fixStyle": "inline-type-imports"
                }
            ],
            "@typescript-eslint/no-unused-vars": [
                "error",
                {
                    "vars": "all",
                    "args": "none",
                    "ignoreRestSiblings": false
                }
            ],
            "@typescript-eslint/prefer-optional-chain": "error",
            "@typescript-eslint/array-type": "error",
            "@typescript-eslint/consistent-generic-constructors": "error",
            "@typescript-eslint/no-duplicate-enum-values": "error",
            "@typescript-eslint/no-mixed-enums": "error",
            "@typescript-eslint/no-unsafe-enum-comparison": "error",
            "@typescript-eslint/no-dynamic-delete": "error",
            "@typescript-eslint/prefer-nullish-coalescing": "error",
            "@typescript-eslint/no-non-null-asserted-nullish-coalescing": "error",
            "@typescript-eslint/no-unnecessary-type-arguments": "error",
            "@typescript-eslint/non-nullable-type-assertion-style": "error",
            "@typescript-eslint/prefer-for-of": "error",
            "@typescript-eslint/prefer-includes": "error",
            "@typescript-eslint/prefer-return-this-type": "error",
            "@typescript-eslint/prefer-string-starts-ends-with": "error",
            "@typescript-eslint/require-array-sort-compare": [
                "error",
                {
                    "ignoreStringArrays": true
                }
            ],
            "@typescript-eslint/no-explicit-any": "off",
            "@typescript-eslint/no-inferrable-types": "off",
            "@typescript-eslint/no-non-null-assertion": "off"
        }
    },
    "browserslist": {
        "production": [
            ">0.2%",
            "not dead",
            "not op_mini all"
        ],
        "development": [
            "last 1 chrome version",
            "last 1 firefox version",
            "last 1 safari version"
        ]
    },
    "husky": {
        "hooks": {
            "pre-commit": "lint-staged"
        }
    },
    "lint-staged": {
        "src/**/*.{js,jsx,ts,tsx,json,css,scss,md}": [
            "prettier --write"
        ]
    },
    "prettier": {
        "trailingComma": "es5",
        "jsxBracketSameLine": true,
        "bracketSpacing": false,
        "tabWidth": 4,
        "semi": true,
        "singleQuote": false,
        "quoteProps": "preserve",
        "arrowParens": "avoid"
    }
}
